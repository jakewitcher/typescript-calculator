{"version":3,"sources":["computations.ts","index.ts"],"names":[],"mappings":"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","file":"src.77de5100.map","sourceRoot":"..\\src","sourcesContent":["export interface Operator {\n  (a: number, b: number): number;\n}\n\nlet add: Operator;\nadd = function(a, b) {\n  return a + b;\n};\n\nlet subtract: Operator;\nsubtract = function(a, b) {\n  return a - b;\n};\n\nlet multiply: Operator;\nmultiply = function(a, b) {\n  return a * b;\n};\n\nlet divide: Operator;\ndivide = function(a, b) {\n  return a / b;\n};\n\nexport { add, subtract, multiply, divide };\n","import { add, subtract, multiply, divide, Operator } from '../src/computations';\n\n// state\nlet firstVal: string = '';\nlet secondVal: string = '';\nlet operator: Operator | undefined;\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'];\nconst operators = [\n  { fn: add, sym: '+' },\n  { fn: subtract, sym: '-' },\n  { fn: multiply, sym: '&times' },\n  { fn: divide, sym: '&divide' },\n];\n\n// elements\nconst display = document.getElementById('display');\nconst numberButtons = document.getElementById('number-buttons');\nconst operatorButtons = document.getElementById('operator-buttons');\nconst equalsOperator = document.getElementById('equals-operator');\nconst clearButton = document.getElementById('clear');\n\n// initialize display\n(display as HTMLElement).textContent = '0';\n\n// create buttons for each number value\nfunction handleValueChange(val: string, ele: HTMLElement): string {\n  if (val.length < 6) {\n    const newVal = val.concat(ele.textContent as string);\n    (display as HTMLElement).textContent = newVal;\n    return newVal;\n  }\n  return val;\n}\n\nnumbers.forEach(num => {\n  const ele = document.createElement('button');\n  ele.textContent = num.toString();\n  ele.className = 'button button--number';\n  ele.addEventListener('click', () => {\n    if (operator === undefined) {\n      firstVal = handleValueChange(firstVal, ele);\n    } else {\n      secondVal = handleValueChange(secondVal, ele);\n    }\n  });\n  (numberButtons as HTMLElement).insertBefore(ele, clearButton);\n});\n\n// create buttons for each operator\noperators.forEach(op => {\n  const ele = document.createElement('button');\n  ele.innerHTML = op.sym;\n  ele.className = 'button button--operator';\n  ele.addEventListener('click', () => {\n    operator = op.fn;\n  });\n  (operatorButtons as HTMLElement).appendChild(ele);\n});\n\n// create button for equals\nfunction handleResult(result: string) {\n  (display as HTMLElement).textContent = result;\n  firstVal = result;\n  secondVal = '';\n}\n\nfunction handleReset(displayMsg: string) {\n  (display as HTMLElement).textContent = displayMsg;\n  firstVal = '';\n  secondVal = '';\n  operator = undefined;\n}\n\n(equalsOperator as HTMLButtonElement).addEventListener('click', () => {\n  if (firstVal && secondVal && operator) {\n    if (secondVal === '0' && operator === divide) {\n      handleReset('err');\n    } else {\n      let result = (operator as Operator)(\n        parseFloat(firstVal),\n        parseFloat(secondVal),\n      ).toString();\n      if (result.length <= 6) {\n        handleResult(result);\n      } else if (result.includes('.')) {\n        result = result.slice(0, 7);\n        handleResult(result);\n      } else {\n        handleReset('err');\n      }\n    }\n  }\n});\n\n// create button to clear all\n(clearButton as HTMLButtonElement).addEventListener('click', () => {\n  handleReset('0');\n});\n"]}